# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
  displayName: 'Install Python 3.8'
- script: pip install checkov
  displayName: 'Install Checkov'
- script: checkov -d . --bc-api-key 45af728a-ef0f-402e-b4c3-acb9ed5f2c01::Lio1DUw9nzQEJZPcd/DT2Y89n4E= --repo-id billhoph/pipelines-java --branch main -o cli -o junitxml --output-file-path console,CheckovReport.xml 
  displayName: 'Scan with Prisma Cloud'
  env:
    PRISMA_API_URL: https://api.sg.prismacloud.io

- task: PublishTestResults@2
  inputs:
    testRunTitle: "Checkov Results"
    failTaskOnFailedTests: true
    testResultsFormat: "JUnit"
    testResultsFiles: "CheckovReport.xml"
    searchFolder: "$(System.DefaultWorkingDirectory)"
  displayName: "Publish > Checkov scan results"

- task: Maven@3
  displayName: 'Maven built'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: prisma-cloud-compute-scan@3
  displayName: 'Container Image Scanning'
  inputs:
    scanType: 'images'
    twistlockService: 'prisma-cloud-demo'
    artifact: 'nginx'